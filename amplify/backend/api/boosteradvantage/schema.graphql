enum CouponType {
  PRICE
  ITEM
}

enum BusinessCategory {
  RESTAURANT
  WELLNESS
  SERVICE
}

type BoosterPass @model @auth(rules: [{allow: private}]) {
  id: ID!
  isUsed: Boolean!
  userID: String!
  type: String
}

type BusinessAdmin @model @auth(rules: [{allow: private}]) {
  id: ID!
  email: AWSEmail
  phonenumber: AWSPhone
  username: String
  businessID: ID!
  Business: Business @hasOne(fields: ["businessID"])
}

type Business @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  location: String!
  coupons: [Coupon] @hasMany(indexName: "byBusiness", fields: ["id"])
  category: BusinessCategory!
}

type Coupon @model @auth(rules: [{allow: private}]) {
  id: ID!
  business: Business! @belongsTo(fields: ["businessID"])
  couponType: CouponType
  currentPrice: Float
  discountPrice: Float
  itemDescription: String!
  startDate: AWSDate!
  expirationDate: AWSDate!
  businessID: ID! @index(name: "byBusiness")
  termsAndConditions: String!
}

type Product @model @auth(rules: [{allow: private}]) {
  id: ID!
  title: String!
  description: String
  price: Float!
  oldPrice: Float
}

type CartProduct @model @auth(rules: [{allow: private}]) {
  id: ID!
  userSub: String!
  quantity: Int!
  option: String
  productID: ID!
  product: Product @hasOne(fields: ["productID"])
  productTitle: String
}

type OrderProduct @model @auth(rules: [{allow: private}]) {
  id: ID!
  quantity: Int!
  option: String
  productID: ID
  product: Product @hasOne(fields: ["productID"])
  orderID: ID
  order: Order @hasOne(fields: ["orderID"])
}

type Order @model @auth(rules: [{allow: private}]) {
  id: ID!
  userSub: String!
  fullName: String!
  phoneNumber: String
  country: String
  city: String
  address: String
}
 