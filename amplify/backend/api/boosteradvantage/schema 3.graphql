type Mutation {
  createPaymentIntent(amount: Int!): PaymentIntent!
    @function(name: "CreatePaymentIntent-${env}")
    @auth(rules: [{ allow: private, provider: iam }])
}

type PaymentIntent {
  clientSecret: String!
}

enum CouponType {
  PRICE
  ITEM
}

enum BusinessCategory {
  RESTAURANT
  WELLNESS
  SERVICE
}

type BoosterPass @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  isUsed: Boolean!
  userID: ID! @index(name: "byUser")
  type: String
}

type User @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  email: AWSEmail
  phonenumber: AWSPhone
  username: String
  Coupons: [Coupon] @hasMany(indexName: "byUser", fields: ["id"])
  BoosterPass: [BoosterPass] @hasMany(indexName: "byUser", fields: ["id"])
}

type Business @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  name: String!
  location: String!
  coupons: [Coupon] @hasMany
  category: BusinessCategory!
}

type Coupon @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  business: Business! @belongsTo
  userID: ID @index(name: "byUser")
  couponType: CouponType!
  currentPrice: Float
  discountPrice: Float
  itemDescription: String!
  expirationDate: AWSDate
}

type Product @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  title: String!
  description: String
  image: String
  images: [String!]
  options: [String!]

  price: Float!
  oldPrice: Float
}

type CartProduct @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  userSub: String!
  quantity: Int!
  option: String

  productID: ID!
  product: Product @hasOne(fields: ["productID"])
}

type OrderProduct @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  quantity: Int!
  option: String

  productID: ID
  product: Product @hasOne(fields: ["productID"])

  orderID: ID
  order: Order @hasOne(fields: ["orderID"])
}

type Order @model @auth(rules: [{ allow: private, provider: iam }]) {
  id: ID!
  userSub: String!

  fullName: String!
  phoneNumber: String
  country: String
  city: String
  address: String
}
